From fc1e9764a927627fdd9463e015d9a2492cebb7fd Mon Sep 17 00:00:00 2001
From: MarvinCao <caogang440@163.com>
Date: Tue, 8 Dec 2015 21:21:05 +0800
Subject: [PATCH] =?UTF-8?q?=E5=B0=9D=E8=AF=95=E8=A7=A3=E5=86=B3=E7=94=B1?=
 =?UTF-8?q?=E4=BA=8E=E6=8E=A5=E6=94=B6=E5=88=B0=E6=B2=A1=E6=9C=89ssid?=
 =?UTF-8?q?=E5=92=8Csupport=20rates=20elements=E5=AD=97=E6=AE=B5=E7=9A=84p?=
 =?UTF-8?q?robe=20request=E8=80=8C=E5=AF=BC=E8=87=B4=E7=9A=84segment=20fau?=
 =?UTF-8?q?lt=EF=BC=8C=E5=B9=B6=E4=B8=94=E5=90=AF=E5=8A=A8ping=20thread?=
 =?UTF-8?q?=E4=B9=8B=E5=89=8D=E5=85=88=E4=BC=91=E7=9C=A05s?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 src/odin/odinagent.c | 20 +++++++++++++++++---
 1 file changed, 17 insertions(+), 3 deletions(-)

diff --git a/src/odin/odinagent.c b/src/odin/odinagent.c
index 7283a7e..90fbb59 100644
--- a/src/odin/odinagent.c
+++ b/src/odin/odinagent.c
@@ -181,6 +181,7 @@ void* ping_thread(void *arg)
 
 int ping_thread_init()
 {
+    sleep(5);
 	if((pthread_create(&odin_thread_id, NULL, (void *) ping_thread, NULL)) != 0) {
 		wpa_printf(MSG_ERROR, "Create ping pthread error!");
 		return 0;
@@ -1200,15 +1201,24 @@ void recv_auth(unsigned char *buf)
 	}
 }
 
-void recv_probe_request(unsigned char *buf)
+void recv_probe_request(unsigned char *buf, int buf_p_len)
 {
 	struct ieee80211_mgmt *mgmt = (struct ieee80211_mgmt *) buf;
-	u8 *ptr = mgmt->u.probe_req.variable;
+	u8 *ptr = NULL;
 	u8 ssid_empty = 0;
 	char tmp[SSID_MAX_LEN];
 	EtherAddress src;
 	String *ssid = NULL;
 	c_iterator map_end, target;
+
+	if (buf_p_len > 9) {
+	    ptr = mgmt->u.probe_req.variable;
+	}
+	else {
+	    wpa_printf(MSG_INFO, "recvprobe: the length of recv_probe_request is too short");
+	    return;
+	}
+
 wpa_printf(MSG_INFO, "recvprobe: come into the recv_probe_request");
 	if ((ptr != NULL) && (*ptr == WLAN_EID_SSID)) {
 		if(ptr[1] == 0) {
@@ -1226,6 +1236,10 @@ wpa_printf(MSG_INFO, "recvprobe: ssid empty");
 			ssid->str[(ssid->length)-1] = '\0';
 		}
 	}
+	else {
+	    wpa_printf(MSG_INFO, "recvprobe: recv_probe_request isn't contain ssid element");
+	    return;
+	}
 
 	memcpy(&src, mgmt->sa, ETH_ALEN);
 
@@ -1332,7 +1346,7 @@ void odin_handle_monitor_read(int sock, void *eloop_ctx, void *sock_ctx)
 	case WLAN_FC_TYPE_MGMT:
 		if (stype == WLAN_FC_STYPE_PROBE_REQ) {
 			//wpa_printf(MSG_INFO, "recvprobe : recv the mgmt, type : %d, stype : %d", WLAN_FC_GET_TYPE(fc), stype);
-			recv_probe_request(buf_p);
+			recv_probe_request(buf_p, len_buf_p);
 			return;
 		}
 		if (stype == WLAN_FC_STYPE_AUTH) {
-- 
1.9.4.msysgit.2

