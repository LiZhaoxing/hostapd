From 2cb3135e0c9eb7fdd6db4acbe13fbe84db6c8559 Mon Sep 17 00:00:00 2001
From: MarvinCao <caogang440@163.com>
Date: Wed, 28 Oct 2015 21:45:27 +0800
Subject: [PATCH] fixup the broadcast beacon problem

---
 src/ap/beacon.c | 309 +++-----------------------------------------------------
 1 file changed, 13 insertions(+), 296 deletions(-)

diff --git a/src/ap/beacon.c b/src/ap/beacon.c
index a16e6f4..f3851b3 100644
--- a/src/ap/beacon.c
+++ b/src/ap/beacon.c
@@ -768,232 +768,15 @@ int ieee802_11_build_ap_params(struct hostapd_data *hapd,
 	head->frame_control = IEEE80211_FC(WLAN_FC_TYPE_MGMT,
 					   WLAN_FC_STYPE_BEACON);
 	head->duration = host_to_le16(0);
-	os_memset(head->da, 0xff, ETH_ALEN);
-
-	os_memcpy(head->sa, hapd->own_addr, ETH_ALEN);
-	os_memcpy(head->bssid, hapd->own_addr, ETH_ALEN);
-	head->u.beacon.beacon_int =
-		host_to_le16(hapd->iconf->beacon_int);
-
-	/* hardware or low-level driver will setup seq_ctrl and timestamp */
-	capab_info = hostapd_own_capab_info(hapd, NULL, 0);
-	head->u.beacon.capab_info = host_to_le16(capab_info);
-	pos = &head->u.beacon.variable[0];
-
-	/* SSID */
-	*pos++ = WLAN_EID_SSID;
-	if (hapd->conf->ignore_broadcast_ssid == 2) {
-		/* clear the data, but keep the correct length of the SSID */
-		*pos++ = hapd->conf->ssid.ssid_len;
-		os_memset(pos, 0, hapd->conf->ssid.ssid_len);
-		pos += hapd->conf->ssid.ssid_len;
-	} else if (hapd->conf->ignore_broadcast_ssid) {
-		*pos++ = 0; /* empty SSID */
-	} else {
-		*pos++ = hapd->conf->ssid.ssid_len;
-		os_memcpy(pos, hapd->conf->ssid.ssid,
-			  hapd->conf->ssid.ssid_len);
-		pos += hapd->conf->ssid.ssid_len;
-	}
-
-	/* Supported rates */
-	pos = hostapd_eid_supp_rates(hapd, pos);
-
-	/* DS Params */
-	pos = hostapd_eid_ds_params(hapd, pos);
-
-	head_len = pos - (u8 *) head;
-
-	tailpos = hostapd_eid_country(hapd, tailpos,
-				      tail + BEACON_TAIL_BUF_SIZE - tailpos);
-
-	/* Power Constraint element */
-	tailpos = hostapd_eid_pwr_constraint(hapd, tailpos);
-
-	/* ERP Information element */
-	tailpos = hostapd_eid_erp_info(hapd, tailpos);
-
-	/* Extended supported rates */
-	tailpos = hostapd_eid_ext_supp_rates(hapd, tailpos);
-
-	/* RSN, MDIE, WPA */
-	tailpos = hostapd_eid_wpa(hapd, tailpos, tail + BEACON_TAIL_BUF_SIZE -
-				  tailpos);
-
-	tailpos = hostapd_eid_bss_load(hapd, tailpos,
-				       tail + BEACON_TAIL_BUF_SIZE - tailpos);
-
-#ifdef CONFIG_IEEE80211N
-	tailpos = hostapd_eid_ht_capabilities(hapd, tailpos);
-	tailpos = hostapd_eid_ht_operation(hapd, tailpos);
-#endif /* CONFIG_IEEE80211N */
-
-	tailpos = hostapd_eid_ext_capab(hapd, tailpos);
-
-	/*
-	 * TODO: Time Advertisement element should only be included in some
-	 * DTIM Beacon frames.
-	 */
-	tailpos = hostapd_eid_time_adv(hapd, tailpos);
-
-	tailpos = hostapd_eid_interworking(hapd, tailpos);
-	tailpos = hostapd_eid_adv_proto(hapd, tailpos);
-	tailpos = hostapd_eid_roaming_consortium(hapd, tailpos);
-	tailpos = hostapd_add_csa_elems(hapd, tailpos, tail,
-					&hapd->iface->cs_c_off_beacon);
-#ifdef CONFIG_IEEE80211AC
-	tailpos = hostapd_eid_vht_capabilities(hapd, tailpos);
-	tailpos = hostapd_eid_vht_operation(hapd, tailpos);
-#endif /* CONFIG_IEEE80211AC */
-
-	/* Wi-Fi Alliance WMM */
-	tailpos = hostapd_eid_wmm(hapd, tailpos);
-
-#ifdef CONFIG_WPS
-	if (hapd->conf->wps_state && hapd->wps_beacon_ie) {
-		os_memcpy(tailpos, wpabuf_head(hapd->wps_beacon_ie),
-			  wpabuf_len(hapd->wps_beacon_ie));
-		tailpos += wpabuf_len(hapd->wps_beacon_ie);
-	}
-#endif /* CONFIG_WPS */
-
-#ifdef CONFIG_P2P
-	if ((hapd->conf->p2p & P2P_ENABLED) && hapd->p2p_beacon_ie) {
-		os_memcpy(tailpos, wpabuf_head(hapd->p2p_beacon_ie),
-			  wpabuf_len(hapd->p2p_beacon_ie));
-		tailpos += wpabuf_len(hapd->p2p_beacon_ie);
-	}
-#endif /* CONFIG_P2P */
-#ifdef CONFIG_P2P_MANAGER
-	if ((hapd->conf->p2p & (P2P_MANAGE | P2P_ENABLED | P2P_GROUP_OWNER)) ==
-	    P2P_MANAGE)
-		tailpos = hostapd_eid_p2p_manage(hapd, tailpos);
-#endif /* CONFIG_P2P_MANAGER */
-
-#ifdef CONFIG_HS20
-	tailpos = hostapd_eid_hs20_indication(hapd, tailpos);
-	tailpos = hostapd_eid_osen(hapd, tailpos);
-#endif /* CONFIG_HS20 */
-
-	if (hapd->conf->vendor_elements) {
-		os_memcpy(tailpos, wpabuf_head(hapd->conf->vendor_elements),
-			  wpabuf_len(hapd->conf->vendor_elements));
-		tailpos += wpabuf_len(hapd->conf->vendor_elements);
-	}
-
-	tail_len = tailpos > tail ? tailpos - tail : 0;
-
-	resp = hostapd_probe_resp_offloads(hapd, &resp_len);
-#endif /* NEED_AP_MLME */
-
-	os_memset(params, 0, sizeof(*params));
-	params->head = (u8 *) head;
-	params->head_len = head_len;
-	params->tail = tail;
-	params->tail_len = tail_len;
-	params->proberesp = resp;
-	params->proberesp_len = resp_len;
-	params->dtim_period = hapd->conf->dtim_period;
-	params->beacon_int = hapd->iconf->beacon_int;
-	params->basic_rates = hapd->iface->basic_rates;
-	params->ssid = hapd->conf->ssid.ssid;
-	params->ssid_len = hapd->conf->ssid.ssid_len;
-	params->pairwise_ciphers = hapd->conf->wpa_pairwise |
-		hapd->conf->rsn_pairwise;
-	params->group_cipher = hapd->conf->wpa_group;
-	params->key_mgmt_suites = hapd->conf->wpa_key_mgmt;
-	params->auth_algs = hapd->conf->auth_algs;
-	params->wpa_version = hapd->conf->wpa;
-	params->privacy = hapd->conf->ssid.wep.keys_set || hapd->conf->wpa ||
-		(hapd->conf->ieee802_1x &&
-		 (hapd->conf->default_wep_key_len ||
-		  hapd->conf->individual_wep_key_len));
-	switch (hapd->conf->ignore_broadcast_ssid) {
-	case 0:
-		params->hide_ssid = NO_SSID_HIDING;
-		break;
-	case 1:
-		params->hide_ssid = HIDDEN_SSID_ZERO_LEN;
-		break;
-	case 2:
-		params->hide_ssid = HIDDEN_SSID_ZERO_CONTENTS;
-		break;
-	}
-	params->isolate = hapd->conf->isolate;
-#ifdef NEED_AP_MLME
-	params->cts_protect = !!(ieee802_11_erp_info(hapd) &
-				ERP_INFO_USE_PROTECTION);
-	params->preamble = hapd->iface->num_sta_no_short_preamble == 0 &&
-		hapd->iconf->preamble == SHORT_PREAMBLE;
-	if (hapd->iface->current_mode &&
-	    hapd->iface->current_mode->mode == HOSTAPD_MODE_IEEE80211G)
-		params->short_slot_time =
-			hapd->iface->num_sta_no_short_slot_time > 0 ? 0 : 1;
-	else
-		params->short_slot_time = -1;
-	if (!hapd->iconf->ieee80211n || hapd->conf->disable_11n)
-		params->ht_opmode = -1;
-	else
-		params->ht_opmode = hapd->iface->ht_op_mode;
-#endif /* NEED_AP_MLME */
-	params->interworking = hapd->conf->interworking;
-	if (hapd->conf->interworking &&
-	    !is_zero_ether_addr(hapd->conf->hessid))
-		params->hessid = hapd->conf->hessid;
-	params->access_network_type = hapd->conf->access_network_type;
-	params->ap_max_inactivity = hapd->conf->ap_max_inactivity;
-#ifdef CONFIG_HS20
-	params->disable_dgaf = hapd->conf->disable_dgaf;
-	if (hapd->conf->osen) {
-		params->privacy = 1;
-		params->osen = 1;
-	}
-#endif /* CONFIG_HS20 */
-	return 0;
-}
-
-
-// added by MagicCG
-int ieee802_11_build_ap_params_odin(struct hostapd_data *hapd,
-			       struct wpa_driver_ap_params *params)
-{
-	struct ieee80211_mgmt *head = NULL;
-	u8 *tail = NULL;
-	size_t head_len = 0, tail_len = 0;
-	u8 *resp = NULL;
-	size_t resp_len = 0;
-#ifdef NEED_AP_MLME
-	u16 capab_info;
-	u8 *pos, *tailpos;
-
-#define BEACON_HEAD_BUF_SIZE 256
-#define BEACON_TAIL_BUF_SIZE 512
-	head = os_zalloc(BEACON_HEAD_BUF_SIZE);
-	tail_len = BEACON_TAIL_BUF_SIZE;
-#ifdef CONFIG_WPS
-	if (hapd->conf->wps_state && hapd->wps_beacon_ie)
-		tail_len += wpabuf_len(hapd->wps_beacon_ie);
-#endif /* CONFIG_WPS */
-#ifdef CONFIG_P2P
-	if (hapd->p2p_beacon_ie)
-		tail_len += wpabuf_len(hapd->p2p_beacon_ie);
-#endif /* CONFIG_P2P */
-	if (hapd->conf->vendor_elements)
-		tail_len += wpabuf_len(hapd->conf->vendor_elements);
-	tailpos = tail = os_malloc(tail_len);
-	if (head == NULL || tail == NULL) {
-		wpa_printf(MSG_ERROR, "Failed to set beacon data");
-		os_free(head);
-		os_free(tail);
-		return -1;
-	}
-
-	head->frame_control = IEEE80211_FC(WLAN_FC_TYPE_MGMT,
-					   WLAN_FC_STYPE_BEACON);
-	head->duration = host_to_le16(0);
-	// MagicCG modified the broadcast beacon frame to the unicast beacon frame
+	// modified by MagicCG
 	// os_memset(head->da, 0xff, ETH_ALEN);
-	os_memcpy(head->da, hapd->conf->accept_mac->addr, ETH_ALEN);
+	if ((hapd->conf->macaddr_acl == DENY_UNLESS_ACCEPTED) &&
+		(hapd->conf->num_accept_mac == 1)) {
+		os_memcpy(head->da, hapd->conf->accept_mac->addr, ETH_ALEN);
+	}
+	else {
+		os_memset(head->da, 0xff, ETH_ALEN);
+	}// modified by MagicCG
 
 	os_memcpy(head->sa, hapd->own_addr, ETH_ALEN);
 	os_memcpy(head->bssid, hapd->own_addr, ETH_ALEN);
@@ -1239,81 +1022,15 @@ fail:
 }
 
 
-// added by MagicCG
-int ieee802_11_set_beacon_odin(struct hostapd_data *hapd)
-{
-	struct wpa_driver_ap_params params;
-	struct hostapd_freq_params freq;
-	struct hostapd_iface *iface = hapd->iface;
-	struct hostapd_config *iconf = iface->conf;
-	struct wpabuf *beacon, *proberesp, *assocresp;
-	int res, ret = -1;
-
-	if (hapd->iface->csa_in_progress) {
-		wpa_printf(MSG_ERROR, "Cannot set beacons during CSA period");
-		return -1;
-	}
-
-	hapd->beacon_set_done = 1;
-
-	if (ieee802_11_build_ap_params_odin(hapd, &params) < 0)
-		return -1;
-
-	if (hostapd_build_ap_extra_ies(hapd, &beacon, &proberesp, &assocresp) <
-	    0)
-		goto fail;
-
-	params.beacon_ies = beacon;
-	params.proberesp_ies = proberesp;
-	params.assocresp_ies = assocresp;
-
-	if (iface->current_mode &&
-	    hostapd_set_freq_params(&freq, iconf->hw_mode, iface->freq,
-				    iconf->channel, iconf->ieee80211n,
-				    iconf->ieee80211ac,
-				    iconf->secondary_channel,
-				    iconf->vht_oper_chwidth,
-				    iconf->vht_oper_centr_freq_seg0_idx,
-				    iconf->vht_oper_centr_freq_seg1_idx,
-				    iface->current_mode->vht_capab) == 0)
-		params.freq = &freq;
-
-	res = hostapd_drv_set_ap(hapd, &params);
-	hostapd_free_ap_extra_ies(hapd, beacon, proberesp, assocresp);
-	if (res)
-		wpa_printf(MSG_ERROR, "Failed to set beacon parameters");
-	else
-		ret = 0;
-fail:
-	ieee802_11_free_ap_params(&params);
-	return ret;
-}
-
-
 int ieee802_11_set_beacons(struct hostapd_iface *iface)
 {
 	size_t i;
 	int ret = 0;
-	
-	// modified by MagicCG
-	//for (i = 0; i < iface->num_bss; i++) {
-	//	if (iface->bss[i]->started &&
-	//	    ieee802_11_set_beacon(iface->bss[i]) < 0)
-	//		ret = -1;
-	//}
-	for (i = 0; i< iface->num_bss; i++) {
-		if ( i != 0 &&
-			(iface->conf->bss[i]->macaddr_acl == DENY_UNLESS_ACCEPTED) &&
-			(iface->conf->bss[i]->num_accept_mac == 1)) {
-			if (iface->bss[i]->started &&
-				ieee802_11_set_beacon_odin(iface->bss[i]) < 0)
-				ret = -1;
-		}
-		else {
-			if (iface->bss[i]->started &&
-				ieee802_11_set_beacon(iface->bss[i]) < 0)
-				ret = -1;
-		}
+
+	for (i = 0; i < iface->num_bss; i++) {
+		if (iface->bss[i]->started &&
+		    ieee802_11_set_beacon(iface->bss[i]) < 0)
+			ret = -1;
 	}
 
 	return ret;
-- 
1.9.4.msysgit.2

